#
# This file is part of Invenio.
# Copyright (C) 2016-2018 CERN.
#
# Invenio is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.

"""Change schema to schemas_schema (conform with templates)."""

from alembic import op
import sqlalchemy as sa

from cap.types import json_type

# revision identifiers, used by Alembic.
revision = 'f1f15bb10868'
down_revision = '578d1e536e03'
branch_labels = ()
depends_on = None


def upgrade():
    """Upgrade database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'schemas_schema',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('major', sa.Integer(), nullable=False),
        sa.Column('minor', sa.Integer(), nullable=False),
        sa.Column('patch', sa.Integer(), nullable=False),

        sa.Column('name', sa.String(length=128), nullable=False),
        sa.Column('fullname', sa.String(length=128), nullable=True),
        sa.Column('experiment', sa.String(length=128), nullable=True),

        sa.Column('deposit_schema', json_type, nullable=True),
        sa.Column('deposit_options', json_type, nullable=True),
        sa.Column('deposit_mapping', json_type, nullable=True),
        sa.Column('record_schema', json_type, nullable=True),
        sa.Column('record_options', json_type, nullable=True),
        sa.Column('record_mapping', json_type, nullable=True),
        sa.Column('is_indexed', sa.Boolean(name='is_indexed'), nullable=True),
        sa.Column('use_deposit_as_record',
                  sa.Boolean(name='use_deposit_as_record'),
                  nullable=True),

        sa.Column('created', sa.DateTime(), nullable=False),
        sa.Column('updated', sa.DateTime(), nullable=False),

        sa.PrimaryKeyConstraint('id',
                                name=op.f('pk_schemas_schema')),
        sa.UniqueConstraint('name', 'major', 'minor', 'patch',
                            name='unique_schemas_version')
    )

    op.drop_table('schema')
    # ### end Alembic commands ###


def downgrade():
    """Downgrade database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'schema',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('major', sa.Integer(), nullable=False),
        sa.Column('minor', sa.Integer(), nullable=False),
        sa.Column('patch', sa.Integer(), nullable=False),

        sa.Column('name', sa.String(length=128), nullable=False),
        sa.Column('fullname', sa.String(length=128), nullable=True),
        sa.Column('experiment', sa.String(length=128), nullable=True),

        sa.Column('deposit_schema', json_type, nullable=True),
        sa.Column('deposit_options', json_type, nullable=True),
        sa.Column('deposit_mapping', json_type, nullable=True),
        sa.Column('record_schema', json_type, nullable=True),
        sa.Column('record_options', json_type, nullable=True),
        sa.Column('record_mapping', json_type, nullable=True),
        sa.Column('is_indexed', sa.Boolean(name='is_indexed'), nullable=True),
        sa.Column('use_deposit_as_record',
                  sa.Boolean(name='use_deposit_as_record'),
                  nullable=True),

        sa.Column('created', sa.DateTime(), nullable=False),
        sa.Column('updated', sa.DateTime(), nullable=False),

        sa.PrimaryKeyConstraint('id',
                                name=op.f('pk_schemas_schema')),
        sa.UniqueConstraint('name', 'major', 'minor', 'patch',
                            name='unique_schemas_version')
    )

    op.drop_table('schemas_schema')
    # ### end Alembic commands ###
